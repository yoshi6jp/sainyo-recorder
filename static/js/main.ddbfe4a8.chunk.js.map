{"version":3,"sources":["components/InputButton.module.css","components/DeleteButton.module.css","components/TopBar.module.css","actions/index.ts","store.ts","util/converter.ts","reducer.ts","AppDb.ts","sideEffector.ts","util/useSideEffector.ts","components/Provider.tsx","components/InputButton.tsx","components/DeleteButton.tsx","components/ItemList.tsx","components/Chart.tsx","components/Heatmap.tsx","components/Routes.tsx","components/Navs.tsx","components/TopBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","top","modal","ActionTypes","initialState","itemListByDate","totalList","valueList","scrollBottomEvt","isNavsDisplayed","toTimeRangeIndex","datetime","Math","floor","moment","local","hour","toDateKey","date","timeRangeIndex","startOf","add","format","reducer","state","arguments","length","undefined","action","type","SET_ITEMS","items","payload","_","chain","groupBy","item","mapValues","value","Object","objectSpread","SET_TOTALS","totals","toConsumableArray","SCROLL_BOTTOM","Date","now","SHOW_NAVS","HIDE_NAVS","db","_Dexie","AppDatabase","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","version","stores","values","table","inherits","Dexie","putItem","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","query","wrap","_context","prev","next","put","CALC_TOTAL","LOAD_ITEMS","stop","_x","_x2","apply","deleteItem","_ref2","_callee2","id","_context2","get","sent","abrupt","delete","_x3","_x4","loadItems","_ref3","_callee3","_context3","where","between","subtract","toDate","endOf","sortBy","_x5","loadTotals","_ref4","_callee4","_context4","toArray","_x6","calcTotal","_ref5","_callee5","totalDoc","dateKey","totalValue","_context5","sumBy","LOAD_TOTALS","_x7","_x8","sideEffector","PUT_ITEM","DELETE_ITEM","dispatchSideEffector","dispatchSECaller","RootContext","createContext","Provider","children","_useSideEffector","slicedToArray","useCallback","dispatchSE","useSideEffector","useReducer","_useSideEffector2","useEffect","react_default","createElement","InputButton","_useState","useState","_useState2","visible","setVisible","_useState3","_useState4","setDatetime","_useState5","_useState6","setValue","useContext","onOpen","onClose","onDatetimeChange","onValueChange","val","onSubmit","num","Number","className","classnames","styles","icon","onClick","es","closable","popup","animationType","renderHeader","locale","enUs","onChange","Item","defaultValue","extra","DeleteButton","onPress","Modal","alert","text","icon_button_next","ItemsTotal","hasDayTotal","hasBottomEl","bottomEl","useRef","current","scrollIntoView","behavior","total","find","dayTotal","NaN","filter","Fragment","map","data_table_next","key","getTime","alignEnd","DeleteButton_DeleteButton","concat","timeRange","isNaN","ref","ItemList","_useContext2$state","last","isEmpty","keys","sort","len","b","idx","flatten","set","stickyRows","style","height","ItemList_ItemsTotal","assign","Chart","width","useWindowSize","data","reduce","result","defineProperty","timeRnageIndex","name","es6","margin","right","strokeDasharray","dataKey","stackId","fill","Heatmap","count","console","log","maxCount","maxBy","tooltipDataAttrs","data-tip","data-event","classForValue","ceil","startDate","react_calendar_heatmap_umd_default","showWeekdayLabels","monthLabels","range","String","weekdayLabels","dist_default","globalEventOff","Routes","react_router","exact","path","component","Navs","react_router_dom","to","index_es","faList","faChartBar","faBraille","TopBar","top_app_bar_next","App","Provider_Provider","TopBar_TopBar","Routes_Routes","InputButton_InputButton","Navs_Navs","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ddbfe4a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"InputButton_top__1PvaW\",\"modal\":\"InputButton_modal__4hQtw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"DeleteButton_top__dozsX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"TopBar_top__1cepO\"};","import { IItem, ITotal, TotalQuery } from \"../AppDb\";\nexport enum ActionTypes {\n  PUT_ITEM = \"PUT_ITEM\",\n  DELETE_ITEM = \"DELETE_ITEM\",\n  LOAD_ITEMS = \"LOAD_ITEMS\",\n  SET_ITEMS = \"SET_ITEMS\",\n  PUT_TOTAL = \"PUT_TOTAL\",\n  LOAD_TOTALS = \"LOAD_TOTALS\",\n  SET_TOTALS = \"SET_TOTALS\",\n  CALC_TOTAL = \"CALC_TOTAL\",\n  SCROLL_BOTTOM = \"SCROLL_BOTTOM\",\n  SHOW_NAVS = \"SHOW_NAVS\",\n  HIDE_NAVS = \"HIDE_NAVS\"\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\nexport interface PUT_ITEM extends IAction {\n  type: ActionTypes.PUT_ITEM;\n  payload: { item: IItem };\n}\nexport interface DELETE_ITEM extends IAction {\n  type: ActionTypes.DELETE_ITEM;\n  payload: { id: number };\n}\nexport interface LOAD_ITEMS extends IAction {\n  type: ActionTypes.LOAD_ITEMS;\n}\nexport interface SET_ITEMS extends IAction {\n  type: ActionTypes.SET_ITEMS;\n  payload: { items: IItem[] };\n}\nexport interface PUT_TOTAL extends IAction {\n  type: ActionTypes.PUT_TOTAL;\n  payload: { total: ITotal };\n}\n\nexport interface LOAD_TOTALS extends IAction {\n  type: ActionTypes.LOAD_TOTALS;\n}\nexport interface SET_TOTALS extends IAction {\n  type: ActionTypes.SET_TOTALS;\n  payload: { totals: ITotal[] };\n}\nexport interface CALC_TOTAL extends IAction {\n  type: ActionTypes.CALC_TOTAL;\n  payload: { query: TotalQuery };\n}\nexport interface SCROLL_BOTTOM extends IAction {\n  type: ActionTypes.SCROLL_BOTTOM;\n}\nexport interface SHOW_NAVS extends IAction {\n  type: ActionTypes.SHOW_NAVS;\n}\nexport interface HIDE_NAVS extends IAction {\n  type: ActionTypes.HIDE_NAVS;\n}\nexport type Actions =\n  | PUT_ITEM\n  | DELETE_ITEM\n  | LOAD_ITEMS\n  | SET_ITEMS\n  | PUT_TOTAL\n  | LOAD_TOTALS\n  | SET_TOTALS\n  | CALC_TOTAL\n  | SCROLL_BOTTOM\n  | SHOW_NAVS\n  | HIDE_NAVS;\n","import { IItem, ITotal, IValue } from \"./AppDb\";\nimport _, { Dictionary } from \"lodash\";\nexport type IItemListByDate = Dictionary<Dictionary<IItem[]>>;\n\nexport interface AppState {\n  itemListByDate: IItemListByDate;\n  totalList: ITotal[];\n  valueList: IValue[];\n  scrollBottomEvt: number;\n  isNavsDisplayed: boolean;\n}\n\nexport const initialState: AppState = {\n  itemListByDate: {},\n  totalList: [],\n  valueList: [],\n  scrollBottomEvt: 0,\n  isNavsDisplayed: true\n};\n","import moment from \"moment\";\nconst TIME_SPAN = 6;\nexport const toTimeRangeIndex = (datetime: Date) =>\n  Math.floor(\n    moment(datetime)\n      .local()\n      .hour() / TIME_SPAN\n  );\n\nexport const toDateKey = (date: string, timeRangeIndex: number) =>\n  moment(date)\n    .local()\n    .startOf(\"days\")\n    .add(TIME_SPAN * (timeRangeIndex - 1), \"hours\")\n    .format(\"YYYY-MM-DD\");\n\nexport const toStartAt = (date: string, timeRangeIndex: number) =>\n  moment(date)\n    .local()\n    .startOf(\"days\")\n    .add(TIME_SPAN * timeRangeIndex, \"hours\")\n    .format(\"YYYY-MM-DD\");\n\nexport const timeRange = (timeRangeIndex: number) =>\n  `${moment()\n    .local()\n    .startOf(\"days\")\n    .add(TIME_SPAN * timeRangeIndex, \"hours\")\n    .format(\"HH:mm\")}-${moment()\n    .local()\n    .startOf(\"days\")\n    .add(TIME_SPAN * (timeRangeIndex + 1), \"hours\")\n    .format(\"HH:mm\")}`;\n\nexport const toRange = (timeRnageIndex: number) =>\n  `${TIME_SPAN * timeRnageIndex} - ${TIME_SPAN * ((timeRnageIndex + 1) % 4)}`;\n","import { initialState } from \"./store\";\nimport { ActionTypes, Actions } from \"./actions\";\nimport _ from \"lodash\";\nimport { toDateKey } from \"./util/converter\";\nexport const reducer = (state = initialState, action: Actions) => {\n  switch (action.type) {\n    case ActionTypes.SET_ITEMS: {\n      const { items } = action.payload;\n      const itemListByDate = _.chain(items)\n        .groupBy(item => toDateKey(item.date, item.timeRangeIndex))\n        .mapValues(items => _.groupBy(items, \"timeRangeIndex\"))\n        .value();\n      return { ...state, itemListByDate };\n    }\n    case ActionTypes.SET_TOTALS: {\n      const { totals } = action.payload;\n      const totalList = [...totals];\n      return { ...state, totalList };\n    }\n    case ActionTypes.SCROLL_BOTTOM: {\n      return { ...state, scrollBottomEvt: Date.now() };\n    }\n    case ActionTypes.SHOW_NAVS: {\n      return { ...state, isNavsDisplayed: true };\n    }\n    case ActionTypes.HIDE_NAVS: {\n      return { ...state, isNavsDisplayed: false };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import Dexie from \"dexie\";\nexport interface IItem {\n  id?: number;\n  datetime: Date;\n  date: string;\n  timeRangeIndex: number;\n  value: number;\n}\nexport interface TotalQuery {\n  date: string; // YYYY-MM-DD\n  timeRangeIndex: number;\n}\nexport interface ITotal extends TotalQuery {\n  id?: number;\n  value: number;\n  dateKey: string;\n}\nexport interface IValue {\n  id?: number;\n  value: number;\n}\n\nexport class AppDatabase extends Dexie {\n  items: Dexie.Table<IItem, number>;\n  totals: Dexie.Table<ITotal, number>;\n  constructor() {\n    super(\"SainyoRecorderDatabase\");\n    this.version(1).stores({\n      items: \"++id, date, datetime, timeRangeIndex,value\",\n      totals: \"++id, date, timeRangeIndex, value, dateKey\",\n      values: \"++id, value\"\n    });\n    this.items = this.table(\"items\");\n    this.totals = this.table(\"totals\");\n  }\n}\nexport const db = new AppDatabase();\n","import { Dispatch } from \"react\";\nimport { SideEffector } from \"./util/useSideEffector\";\nimport { AppState } from \"./store\";\nimport { Actions, ActionTypes } from \"./actions\";\nimport { db, TotalQuery, IItem } from \"./AppDb\";\nimport { toDateKey } from \"./util/converter\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nconst DISPLAY_DAY_SPAN = 3;\nconst putItem = async (dispatch: Dispatch<Actions>, item: IItem) => {\n  const { date, timeRangeIndex } = item;\n  await db.items.put(item);\n  const query: TotalQuery = { date, timeRangeIndex };\n  dispatch({ type: ActionTypes.CALC_TOTAL, payload: { query } });\n  dispatch({ type: ActionTypes.LOAD_ITEMS });\n};\nconst deleteItem = async (dispatch: Dispatch<Actions>, id: number) => {\n  const item = await db.items.get(id);\n  if (!item) {\n    return;\n  }\n  const { date, timeRangeIndex } = item;\n  const query: TotalQuery = { date, timeRangeIndex };\n  await db.items.delete(id);\n  dispatch({ type: ActionTypes.CALC_TOTAL, payload: { query } });\n  dispatch({ type: ActionTypes.LOAD_ITEMS });\n};\nconst loadItems = async (dispatch: Dispatch<Actions>) => {\n  const items = await db.items\n    .where(\"datetime\")\n    .between(\n      moment()\n        .local()\n        .startOf(\"days\")\n        .subtract(DISPLAY_DAY_SPAN, \"days\")\n        .toDate(),\n      moment()\n        .local()\n        .endOf(\"days\")\n        .toDate()\n    )\n    .sortBy(\"dattime\");\n\n  dispatch({ type: ActionTypes.SET_ITEMS, payload: { items } });\n};\nconst loadTotals = async (dispatch: Dispatch<Actions>) => {\n  const totals = await db.totals.toArray();\n  dispatch({ type: ActionTypes.SET_TOTALS, payload: { totals } });\n  dispatch({ type: ActionTypes.SCROLL_BOTTOM });\n};\nconst calcTotal = async (dispatch: Dispatch<Actions>, query: TotalQuery) => {\n  const totalDoc = await db.totals.get({ ...query });\n  const dateKey = toDateKey(query.date, query.timeRangeIndex);\n  const values = await db.items.where({ ...query }).toArray();\n  const totalValue = _.sumBy(values, \"value\");\n  await db.totals.put({ ...totalDoc, ...query, value: totalValue, dateKey });\n  dispatch({ type: ActionTypes.LOAD_TOTALS });\n};\n\nexport const sideEffector: SideEffector<AppState, Actions> = (\n  action,\n  dispatch,\n  state\n) => {\n  switch (action.type) {\n    case ActionTypes.PUT_ITEM: {\n      putItem(dispatch, action.payload.item);\n      return;\n    }\n    case ActionTypes.DELETE_ITEM: {\n      deleteItem(dispatch, action.payload.id);\n      return;\n    }\n    case ActionTypes.LOAD_ITEMS: {\n      loadItems(dispatch);\n      return;\n    }\n    case ActionTypes.CALC_TOTAL: {\n      calcTotal(dispatch, action.payload.query);\n      return;\n    }\n    case ActionTypes.LOAD_TOTALS: {\n      loadTotals(dispatch);\n      return;\n    }\n  }\n};\n","import { Dispatch, useCallback } from \"react\";\nexport type SideEffector<S, A> = (\n  action: A,\n  dispatch: Dispatch<A>,\n  state: S\n) => void;\nexport const useSideEffector = <S, A>(\n  [state, dispatch]: [S, Dispatch<A>],\n  sideEffector: SideEffector<S, A>\n): [S, Dispatch<A>] => {\n  const dispatchSECaller = useCallback((action: A) => {\n    dispatchSE(action);\n  }, []);\n  const dispatchSE = useCallback(\n    dispatchSideEffector(state, dispatch, sideEffector, dispatchSECaller),\n    [state, dispatch, dispatchSECaller]\n  );\n  return [state, dispatchSE];\n};\nconst dispatchSideEffector = <S, A>(\n  state: S,\n  dispatch: Dispatch<A>,\n  sideEffector: SideEffector<S, A>,\n  dispatchSECaller: Dispatch<A>\n) => (action: A) => {\n  dispatch(action);\n  sideEffector(action, dispatchSECaller, state);\n};\n","import React, {\n  createContext,\n  useEffect,\n  useCallback,\n  useReducer,\n  Dispatch\n} from \"react\";\nimport { initialState, AppState } from \"../store\";\nimport { reducer } from \"../reducer\";\nimport { Actions, ActionTypes } from \"../actions\";\nimport { sideEffector } from \"../sideEffector\";\nimport { useSideEffector } from \"../util/useSideEffector\";\ninterface IRootContext {\n  state: AppState;\n  dispatch?: Dispatch<Actions>;\n}\nexport const RootContext = createContext<IRootContext>({\n  state: initialState\n});\n\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useSideEffector(\n    useReducer(reducer, initialState),\n    sideEffector\n  );\n  useEffect(() => {\n    dispatch({ type: ActionTypes.LOAD_ITEMS });\n    dispatch({ type: ActionTypes.LOAD_TOTALS });\n  }, []);\n  const value: IRootContext = {\n    state,\n    dispatch\n  };\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import React, { useContext, useCallback, useState } from \"react\";\nimport { Fab } from \"@rmwc/fab\";\nimport { Modal, List, InputItem, DatePicker, Button } from \"antd-mobile\";\nimport enUs from \"antd-mobile/lib/date-picker/locale/en_US\";\nimport { RootContext } from \"./Provider\";\nimport { ActionTypes } from \"../actions\";\nimport { toTimeRangeIndex } from \"../util/converter\";\nimport styles from \"./InputButton.module.css\";\nimport classnames from \"classnames\";\nimport moment from \"moment\";\nexport const InputButton = () => {\n  const [visible, setVisible] = useState<boolean>(false);\n  const [datetime, setDatetime] = useState<Date>(new Date());\n  const [value, setValue] = useState<string>(\"\");\n  const { dispatch } = useContext(RootContext);\n  const onOpen = useCallback(() => {\n    setDatetime(new Date());\n    setVisible(true);\n    dispatch && dispatch({ type: ActionTypes.HIDE_NAVS });\n  }, [setVisible, dispatch]);\n  const onClose = useCallback(() => {\n    setVisible(false);\n    dispatch && dispatch({ type: ActionTypes.SHOW_NAVS });\n  }, [setVisible, dispatch]);\n  const onDatetimeChange = useCallback(\n    (date: Date) => {\n      setDatetime(date);\n    },\n    [setDatetime]\n  );\n  const onValueChange = useCallback(\n    (val: string) => {\n      setValue(val);\n    },\n    [setValue]\n  );\n  const onSubmit = useCallback(() => {\n    const num = Number(value) || 0;\n    if (num > 0 && dispatch) {\n      const item = {\n        datetime,\n        date: moment(datetime).format(\"YYYY-MM-DD\"),\n        value: num,\n        timeRangeIndex: toTimeRangeIndex(datetime)\n      };\n      dispatch({ type: ActionTypes.PUT_ITEM, payload: { item } });\n      setValue(\"\");\n      setVisible(false);\n      dispatch({ type: ActionTypes.SHOW_NAVS });\n    }\n  }, [dispatch, datetime, value, setVisible]);\n  return (\n    <div className={classnames(styles.top)}>\n      <Fab icon=\"add\" onClick={onOpen} />\n      <Modal\n        closable={true}\n        popup\n        visible={visible}\n        animationType=\"slide-up\"\n        onClose={onClose}\n        className={classnames(styles.modal)}\n      >\n        <List renderHeader={\"採尿量入力\"}>\n          <DatePicker\n            locale={enUs}\n            value={datetime}\n            onChange={onDatetimeChange}\n          >\n            <List.Item>日時</List.Item>\n          </DatePicker>\n          <InputItem\n            type={\"number\"}\n            onChange={onValueChange}\n            defaultValue={value}\n            extra=\"ml\"\n          >\n            採尿量\n          </InputItem>\n          <List.Item>\n            <Button onClick={onSubmit} type=\"primary\">\n              登録\n            </Button>\n          </List.Item>\n        </List>\n      </Modal>\n    </div>\n  );\n};\n","import React, { useContext, useCallback } from \"react\";\nimport { RootContext } from \"./Provider\";\nimport { IconButton } from \"@rmwc/icon-button\";\nimport { Modal } from \"antd-mobile\";\nimport styles from \"./DeleteButton.module.css\";\nimport { ActionTypes } from \"../actions\";\nexport const DeleteButton = ({ id }: { id?: number }) => {\n  const { dispatch } = useContext(RootContext);\n  const onPress = useCallback(() => {\n    if (id && dispatch) {\n      dispatch({ type: ActionTypes.DELETE_ITEM, payload: { id } });\n    }\n  }, [dispatch, id]);\n  const onClick = useCallback(() => {\n    Modal.alert(\"削除しますか?\", \"\", [\n      { text: \"いいえ\" },\n      { text: \"はい\", onPress }\n    ]);\n  }, [onPress]);\n  return <IconButton className={styles.top} icon=\"delete\" onClick={onClick} />;\n};\n","import React, { useContext, useRef, useEffect } from \"react\";\nimport {\n  DataTable,\n  DataTableBody,\n  DataTableCell,\n  DataTableContent,\n  DataTableHead,\n  DataTableHeadCell,\n  DataTableRow\n} from \"@rmwc/data-table\";\nimport { RootContext } from \"./Provider\";\nimport { ITotal, IItem } from \"../AppDb\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { timeRange } from \"../util/converter\";\nimport { DeleteButton } from \"./DeleteButton\";\n\ninterface IItemKyeIdx {\n  dateKey: string;\n  timeRangeIndex: number;\n  hasDayTotal: boolean;\n  items: IItem[];\n  hasBottomEl: boolean;\n}\nconst ItemsTotal = ({\n  items,\n  totals,\n  hasDayTotal,\n  dateKey,\n  timeRangeIndex,\n  hasBottomEl\n}: {\n  items: IItem[];\n  totals: ITotal[];\n  dateKey: string;\n  hasDayTotal: boolean;\n  timeRangeIndex: number;\n  hasBottomEl: boolean;\n}) => {\n  const {\n    state: { scrollBottomEvt }\n  } = useContext(RootContext);\n\n  const bottomEl = useRef<HTMLElement>(null);\n  useEffect(() => {\n    if (bottomEl.current && hasBottomEl) {\n      bottomEl.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [bottomEl, scrollBottomEvt]);\n\n  const total = _.find(totals, { dateKey, timeRangeIndex });\n  let dayTotal: number = NaN;\n  if (hasDayTotal) {\n    dayTotal = _.chain(totals)\n      .filter({ dateKey })\n      .sumBy(\"value\")\n      .value();\n  }\n\n  return (\n    <>\n      {items.map(item => (\n        <DataTableRow key={item.datetime.getTime()}>\n          <DataTableCell>\n            {moment(item.datetime)\n              .local()\n              .format(\"MM/DD\")}\n          </DataTableCell>\n          <DataTableCell>\n            {moment(item.datetime)\n              .local()\n              .format(\"HH:mm\")}\n          </DataTableCell>\n          <DataTableCell alignEnd>{item.value}</DataTableCell>\n          <DataTableCell>\n            <DeleteButton id={item.id} />\n          </DataTableCell>\n        </DataTableRow>\n      ))}\n      {total && (\n        <DataTableRow className=\"table-info\">\n          <DataTableCell>{moment(total.date).format(\"MM/DD\")}</DataTableCell>\n          <DataTableCell>{timeRange(total.timeRangeIndex)}</DataTableCell>\n          <DataTableCell alignEnd>{total.value}</DataTableCell>\n\n          <DataTableCell />\n        </DataTableRow>\n      )}\n      {!Number.isNaN(dayTotal) && (\n        <DataTableRow className=\"table-success\" ref={bottomEl}>\n          <DataTableCell>{moment(dateKey).format(\"MM/DD\")}</DataTableCell>\n          <DataTableCell>合計(06:00-06:00)</DataTableCell>\n          <DataTableCell alignEnd>{dayTotal}</DataTableCell>\n\n          <DataTableCell />\n        </DataTableRow>\n      )}\n    </>\n  );\n};\nexport const ItemList = () => {\n  const {\n    state: { totalList, itemListByDate }\n  } = useContext(RootContext);\n  const total = _.last(totalList);\n  const dateKey = total\n    ? total.dateKey\n    : moment()\n        .local()\n        .format(\"YYYY-MM-DD\");\n  let items: IItemKyeIdx[] = [];\n  if (!_.isEmpty(itemListByDate)) {\n    items = _.chain(itemListByDate)\n      .keys()\n      .sort()\n      .map(dateKey => ({ dateKey, items: itemListByDate[dateKey] }))\n      .map(({ dateKey, items }) => {\n        const len = _.keys(items).length;\n        return _.chain(items)\n          .keys()\n          .map(Number)\n          .sort((a, b) => {\n            if (a === 0) {\n              return 1;\n            } else if (b === 0) {\n              return -1;\n            } else if (a > b) {\n              return 1;\n            } else if (a < b) {\n              return -1;\n            } else {\n              return 0;\n            }\n          })\n          .map((timeRangeIndex, idx) => ({\n            dateKey,\n            timeRangeIndex,\n            items: items[timeRangeIndex],\n            hasDayTotal: idx + 1 === len,\n            hasBottomEl: false\n          }))\n          .value();\n      })\n      .flatten()\n      .value();\n    _.set(_.last(items) || {}, \"hasBottomEl\", true);\n  }\n  return (\n    <DataTable stickyRows={1} style={{ height: \"calc(100vh - 100px)\" }}>\n      <DataTableContent>\n        <DataTableHead>\n          <DataTableRow>\n            <DataTableHeadCell>日付</DataTableHeadCell>\n            <DataTableHeadCell>時間</DataTableHeadCell>\n            <DataTableHeadCell>採尿量</DataTableHeadCell>\n            <DataTableHeadCell />\n          </DataTableRow>\n        </DataTableHead>\n        <DataTableBody>\n          {items.map(item => (\n            <ItemsTotal\n              {...item}\n              key={`${item.dateKey}-${item.timeRangeIndex}`}\n              totals={totalList}\n            />\n          ))}\n        </DataTableBody>\n      </DataTableContent>\n    </DataTable>\n  );\n};\n","import React, { useContext } from \"react\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport { RootContext } from \"./Provider\";\nimport { toRange } from \"../util/converter\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport {\n  BarChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Bar\n} from \"recharts\";\nexport const Chart = () => {\n  const { width } = useWindowSize();\n  const {\n    state: { totalList }\n  } = useContext(RootContext);\n  const data = _.chain(totalList)\n    .groupBy(\"dateKey\")\n    .mapValues(items =>\n      _.reduce(\n        items,\n        (result, item) => ({\n          ...result,\n          [toRange(item.timeRangeIndex)]: item.value\n        }),\n        {}\n      )\n    )\n    .map((item, dateKey) => ({\n      dateKey,\n      name: moment(dateKey).format(\"MM/DD\"),\n      ...item\n    }))\n    .sortBy(\"dateKey\")\n    .value();\n  return (\n    <BarChart\n      width={width}\n      height={width / 2}\n      data={data}\n      margin={{ top: 20, right: 20 }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey=\"6 - 12\" stackId=\"a\" fill=\"#007bff\" />\n      <Bar dataKey=\"12 - 18\" stackId=\"a\" fill=\"#28a745\" />\n      <Bar dataKey=\"18 - 0\" stackId=\"a\" fill=\"#ffc107\" />\n      <Bar dataKey=\"0 - 6\" stackId=\"a\" fill=\"#17a2b8\" />\n    </BarChart>\n  );\n};\n","import React, { useContext, useCallback } from \"react\";\nimport { RootContext } from \"./Provider\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\ninterface IValue {\n  date: Date;\n  count: number;\n}\nexport const Heatmap = () => {\n  const {\n    state: { totalList }\n  } = useContext(RootContext);\n  const values = _.chain(totalList)\n    .groupBy(\"dateKey\")\n    .mapValues(items => _.sumBy(items, \"value\"))\n    .map((count, date) => ({ date: moment(date).toDate(), count }))\n    .sortBy(\"date\")\n    .value();\n  console.log(values);\n  const maxCount =\n    _.chain(values)\n      .maxBy(\"count\")\n      .get(\"count\")\n      .value() || 1;\n  const tooltipDataAttrs = useCallback(\n    (value: IValue) => ({\n      \"data-tip\": value.date\n        ? `[${moment(value.date).format(\"YYYY/MM/DD\")}] ${value.count} ml`\n        : \"\",\n      \"data-event\": \"click\"\n    }),\n    []\n  );\n  const classForValue = useCallback(\n    (value: IValue) =>\n      `color-github-${Math.ceil((_.get(value, \"count\", 0) / maxCount) * 4)}`,\n    [maxCount]\n  );\n  const startDate = moment()\n    .subtract(3, \"month\")\n    .toDate();\n  return (\n    <>\n      <CalendarHeatmap\n        startDate={startDate}\n        showWeekdayLabels={true}\n        values={values}\n        tooltipDataAttrs={tooltipDataAttrs}\n        monthLabels={_.range(1, 13).map(String)}\n        weekdayLabels={[\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]}\n        classForValue={classForValue}\n      />\n      <ReactTooltip globalEventOff=\"click\" />\n    </>\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ItemList } from \"./ItemList\";\nimport { Chart } from \"./Chart\";\nimport { Heatmap } from \"./Heatmap\";\nexport const Routes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ItemList} />\n      <Route path=\"/chart\" component={Chart} />\n      <Route path=\"/heatmap\" component={Heatmap} />\n    </Switch>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { RootContext } from \"./Provider\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon as FaIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faChartBar,\n  faBraille\n} from \"@fortawesome/free-solid-svg-icons\";\nexport const Navs = () => {\n  const {\n    state: { isNavsDisplayed }\n  } = useContext(RootContext);\n  if (isNavsDisplayed) {\n    return (\n      <div className=\"fixed-bottom\">\n        <ul className=\"nav nav-pills nav-fill\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/\" exact={true}>\n              <FaIcon icon={faList} />\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink to=\"/chart\" className=\"nav-link\">\n              <FaIcon icon={faChartBar} />\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink to=\"/heatmap\" className=\"nav-link\">\n              <FaIcon icon={faBraille} />\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n","import React from \"react\";\nimport {\n  TopAppBar,\n  TopAppBarRow,\n  TopAppBarSection,\n  TopAppBarTitle,\n  TopAppBarFixedAdjust\n} from \"@rmwc/top-app-bar\";\nimport styles from \"./TopBar.module.css\";\nexport const TopBar = () => {\n  return (\n    <>\n      <TopAppBar className={styles.top}>\n        <TopAppBarRow>\n          <TopAppBarSection>\n            <TopAppBarTitle>採尿量レコーダー</TopAppBarTitle>\n          </TopAppBarSection>\n        </TopAppBarRow>\n      </TopAppBar>\n      <TopAppBarFixedAdjust />\n    </>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"./components/Provider\";\nimport { ItemList } from \"./components/ItemList\";\nimport { InputButton } from \"./components/InputButton\";\nimport { Routes } from \"./components/Routes\";\nimport { Navs } from \"./components/Navs\";\nimport { TopBar } from \"./components/TopBar\";\nconst App = () => {\n  return (\n    <Router>\n      <Provider>\n        <TopBar />\n        <div className=\"container\">\n          <Routes />\n        </div>\n        <InputButton />\n        <Navs />\n      </Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport \"antd-mobile/dist/antd-mobile.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"material-design-icons/iconfont/material-icons.css\";\nimport \"@material/fab/dist/mdc.fab.css\";\nimport \"@rmwc/data-table/data-table.css\";\nimport \"@material/top-app-bar/dist/mdc.top-app-bar.css\";\nimport \"@material/icon-button/dist/mdc.icon-button.css\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}